name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v44
      with:
        files: |
          src/**
          tests/**

    - name: Determine tests to run
      id: test-selector
      run: |
        # Define file-test mapping
        declare -A test_map=(
          ["src/training_tokenizer.py"]="tests/test_train_bpe.py"
          ["src/bpe_tokenizer.py"]="tests/test_tokenizer.py"
          ["tests/test_train_bpe.py"]="tests/test_train_bpe.py"
          ["tests/test_tokenizer.py"]="tests/test_tokenizer.py"
        )
        
        # Initialize variables
        tests_to_run=""
        run_all=false
        
        # Get changed files as space-separated string
        changed_files="${{ steps.changed-files.outputs.all_changed_files }}"
        
        # Process each changed file
        for file in $changed_files; do
          echo "Processing file: $file"
          
          # Check for specific mappings
          if [[ -n "${test_map[$file]:-}" ]]; then
            tests_to_run="$tests_to_run ${test_map[$file]}"
            echo "Added test: ${test_map[$file]}"
          # Run all tests if core utils change
          elif [[ "$file" == "src/utils.py" ]] || [[ "$file" == "src/__init__.py" ]]; then
            run_all=true
            echo "Core file changed, will run all tests"
          # Run all tests if common test dependencies change
          elif [[ "$file" == "tests/common.py" ]] || [[ "$file" == "tests/adapters.py" ]]; then
            run_all=true
            echo "Test dependency changed, will run all tests"
          # Run all tests if requirements change
          elif [[ "$file" == "requirements.txt" ]] || [[ "$file" == "pyproject.toml" ]]; then
            run_all=true
            echo "Requirements changed, will run all tests"
          fi
        done

        # Handle output
        if [ "$run_all" = true ]; then
          echo "test_command=pytest -v" >> $GITHUB_OUTPUT
          echo "Will run all tests"
        elif [ -n "$tests_to_run" ]; then
          # Remove duplicates and extra spaces
          unique_tests=$(echo $tests_to_run | tr ' ' '\n' | sort -u | tr '\n' ' ' | sed 's/^ *//;s/ *$//')
          echo "test_command=pytest -v $unique_tests" >> $GITHUB_OUTPUT
          echo "Will run specific tests: $unique_tests"
        else
          echo "test_command=echo 'No relevant tests to run'" >> $GITHUB_OUTPUT
          echo "No tests to run"
        fi

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: ${{ steps.test-selector.outputs.test_command }}
